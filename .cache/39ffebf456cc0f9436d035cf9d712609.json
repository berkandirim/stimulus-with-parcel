{"dependencies":[{"name":"/Users/berkan.dirim/Sites/stimulus-starter/.babelrc","includedInParent":true,"mtime":1520511648420},{"name":"/Users/berkan.dirim/Sites/stimulus-starter/package.json","includedInParent":true,"mtime":1520513898424},{"name":"stimulus","loc":{"line":1,"column":27}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _stimulus = require(\"stimulus\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _class = function (_Controller) {\n  _inherits(_class, _Controller);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n  }\n\n  return _class;\n}(_stimulus.Controller);\n\nexports.default = _class;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"src/controllers/hello_controller.js","original":{"line":1,"column":0}}],"sources":{"src/controllers/hello_controller.js":"import { Controller } from \"stimulus\"\n\nexport default class extends Controller {\n\n}\n"},"lineCount":null}},"hash":"b92d78f86cc75bc2f282fb05a94a8a10","cacheData":{"env":{}}}